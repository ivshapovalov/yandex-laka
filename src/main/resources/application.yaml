management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
management.health.ratelimiters.enabled: true

resilience4j:
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
        allowHealthIndicatorToFail: true
        subscribeForEvents: true
        eventConsumerBufferSize: 100
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 100ms
      instances:
        registerHealthIndicator: true

liquibase:
  logLevel: FINE

spring:
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml
  jackson:
    serialization:
      write_dates_as_timestamps: false
  output:
    ansi:
      enabled: ALWAYS
  config:
    name: test
  profiles:
    group:
      default:
        - "dev"
      production:
        - "production"
      test-h2:
        - "test-h2"
      test-postgres:
        - "test-postgres"
    active: default
  sql:
    init:
      mode: always
  jpa:
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    driver-class-name: org.postgresql.Driver
ratelimiter:
  instances:
    basic:
      limitForPeriod: 2
      limitRefreshPeriod: 1s
      timeoutDuration: 1s

salary:
  factors:
    earnings:
      foot: 2
      bike: 3
      auto: 4
    rating:
      foot: 3
      bike: 2
      auto: 1
jsprit:
  vehicle:
    capacity:
      weightIndex: 0
      amountIndex: 1
    types:
      foot: foot
      bike: bike
      auto: auto
    constraints:
      region:
        foot: 1
        bike: 2
        auto: 3
      amount:
        foot: 2
        bike: 4
        auto: 7
      weight:
        foot: 10
        bike: 20
        auto: 40
    delivery:
      cost:
        first: 100
        notFirst: 80
      distance:
        foot:
          firstRegion: 1500
          sameRegion: 600
          nextRegion: 25000
        bike:
          firstRegion: 720
          sameRegion: 480
          nextRegion: 720
        auto:
          firstRegion: 480
          sameRegion: 240
          nextRegion: 480
---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/lavka
    username: postgres
    password: postgres

---
spring:
  config:
    activate:
      on-profile: production
  jpa:
    hibernate:
      ddl-auto: create-drop
  datasource:
    url: jdbc:postgresql://${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
---
spring:
  config:
    activate:
      on-profile: test-postgres
  sql:
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: create-drop
  datasource:
    initialization-mode: always
    url: jdbc:postgresql://localhost:5432/lavka-test
    username: postgres
    password: postgres
---
spring:
  config:
    activate:
      on-profile: test-h2
    name: test
  sql:
    init:
      mode: embedded
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL;NON_KEYWORDS=USER
    username: sa
    password: sa
  h2:
    console:
      enabled: true